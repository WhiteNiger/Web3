a=[]
q=0
abc='0123456789'
for i in range(10):
    a.append(0)
s=input()
for i in s:
    if i=='.':
        break
    else:
        if i in abc:
            a[abc.find(i)]+=1
            q+=1
k=0
for i in range(10):
    if a[i]%2==1:
        k+=1
        c=i
st=''
f=(a[0]==1)
for i in range(10):
    if (a[i]>1) or (a[i]==1) and (a[0]==0):
        f=True
if k>1 or not f or (q-a[0]<2) and q!=1:
    print('NO')
else:
    print('YES')
    for i in range(1,10):
        for j in range(a[i]//2):
            st=st+str(i)
            if (st!='') and (len(st)==1):
                for k in range(a[0]//2):
                    st=st+str(0)
    if k==1:
        st=st+str(c)
    if len(st)!=1:
        print(st+st[len(st)-2::-1])
    else:
        print(st)
        
'''На вход программе подается набор символов, заканчивающийся точкой. Напишите эффективную, в том числе и по используемой памяти,
программу (укажите используемую версию языка программирования, например, Borland Pascal 7.0), которая сначала будет определять, есть ли в этом наборе символы,
соответствующие десятичным цифрам. Если такие символы есть, то можно ли переставить их так, чтобы полученное число было симметричным
(читалось одинаково как слева направо, так и справа налево). Ведущих нулей в числе быть не должно, исключение – число 0, запись которого содержит ровно один ноль.
Если требуемое число составить невозможно, то программа должна вывести на экран слово “NO”. А если возможно, то в первой строке следует вывести слово “YES”,
а во второй – искомое симметричное число.
Если таких чисел несколько, то программа должна выводить минимальное из них. Например, пусть на вход подаются следующие символы:'''        
        
 
